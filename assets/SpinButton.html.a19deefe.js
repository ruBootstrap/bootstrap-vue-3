import{_ as V,f as q,g as d,o as x,c as w,a,b as p,d as n,w as s,e as k,r as c,t as v,u as S}from"./app.68c318e0.js";const z=a("h1",{id:"form-spinbutton",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#form-spinbutton","aria-hidden":"true"},"#"),p(" Form Spinbutton")],-1),B=a("p",null,"The Form SpinButton allows the user to adjusting a numeric range with finite control.",-1),C=a("h2",{id:"overview",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#overview","aria-hidden":"true"},"#"),p(" Overview")],-1),I=a("code",null,"<b-form-spinbutton>",-1),T={href:"https://www.w3.org/TR/wai-aria-practices-1.2/#spinbutton",target:"_blank",rel:"noopener noreferrer"},U=a("a",{href:"#accessibility"},"keyboard control",-1),D=a("label",{for:"demo-sb"},"Spin Button",-1),F=k(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-spin-button</span>  <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>ts<span class="token punctuation">&#39;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">,</span> computed<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
  <span class="token keyword">const</span> ex1Value <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <kbd>ArrowUp</kbd> and <kbd>ArrowDown</kbd> keys can be used to increment or decrement the value.</p><h2 id="styling" tabindex="-1"><a class="header-anchor" href="#styling" aria-hidden="true">#</a> Styling</h2><h3 id="sizing" tabindex="-1"><a class="header-anchor" href="#sizing" aria-hidden="true">#</a> Sizing</h3>`,4),A=a("label",{for:"sb-small"},"Spin button - Small size",-1),N=a("label",{for:"sb-default"},"Spin button - Default size",-1),R=a("label",{for:"sb-large"},"Spin button - Large size",-1),j=a("h3",{id:"inline",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#inline","aria-hidden":"true"},"#"),p(" Inline")],-1),E=a("label",{for:"demo-sb"},"Spin Button",-1),L=a("label",{for:"sb-inline"},"Inline spin button",-1),O=k(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sb-inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Inline spin button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-spin-button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sb-inline<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ex1Value<span class="token punctuation">&quot;</span></span> <span class="token attr-name">inline</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-spin-button</span><span class="token punctuation">&gt;</span></span>
    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>ts<span class="token punctuation">&#39;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">,</span> computed<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
    <span class="token keyword">const</span> ex1Value <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vertical" tabindex="-1"><a class="header-anchor" href="#vertical" aria-hidden="true">#</a> Vertical</h3>`,2),W=a("label",{for:"sb-vertical"},"Vertical spin button",-1),M=k(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sb-vertical<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Vertical spin button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-spin-button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sb-vertical<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ex1Value<span class="token punctuation">&quot;</span></span> <span class="token attr-name">vertical</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-spin-button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>ts<span class="token punctuation">&#39;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">,</span> computed<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
    <span class="token keyword">const</span> ex1Value <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="number-formating" tabindex="-1"><a class="header-anchor" href="#number-formating" aria-hidden="true">#</a> Number Formating</h2><h3 id="custom-formatter" tabindex="-1"><a class="header-anchor" href="#custom-formatter" aria-hidden="true">#</a> Custom Formatter</h3>`,3),G=a("h2",{id:"disabled-and-readonly-states",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#disabled-and-readonly-states","aria-hidden":"true"},"#"),p(" Disabled and readonly states")],-1),H=a("label",{for:"sb-disabled"},"Disabled spin button",-1),J=a("label",{for:"sb-readonly",class:""},"Readonly spin button",-1),K=q({__name:"SpinButton.html",setup(P){const h=d(["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]),r=d(0),e=d(50);let g=m=>h.value[m];return(m,t)=>{const f=c("ExternalLinkIcon"),o=c("b-form-spin-button"),i=c("b-card"),u=c("ClientOnly"),b=c("b-col"),_=c("b-row"),y=c("ComponentReference");return x(),w("div",null,[z,B,C,a("p",null,[p("The component "),I,p(" is "),a("a",T,[p("WAI-ARIA compliant"),n(f)]),p(", allowing for "),U,p(", and supports both horizontal (default) and vertical layout.")]),n(u,null,{default:s(()=>[n(i,null,{default:s(()=>[D,n(o,{modelValue:e.value,"onUpdate:modelValue":t[0]||(t[0]=l=>e.value=l),min:"1",max:"100",step:"1"},null,8,["modelValue"]),a("p",null,"Value: "+v(e.value),1)]),_:1})]),_:1}),F,n(u,null,{default:s(()=>[n(i,null,{default:s(()=>[A,n(o,{id:"sb-small",size:"sm",placeholder:"--",class:"mb-2"}),N,n(o,{id:"sb-default",placeholder:"--",class:"mb-2"}),R,n(o,{id:"sb-large",size:"lg",placeholder:"--",class:"mb-2"})]),_:1})]),_:1}),j,n(u,null,{default:s(()=>[n(i,null,{default:s(()=>[E,L,n(o,{id:"sb-inline",modelValue:e.value,"onUpdate:modelValue":t[1]||(t[1]=l=>e.value=l),inline:""},null,8,["modelValue"])]),_:1})]),_:1}),O,n(u,null,{default:s(()=>[n(i,null,{default:s(()=>[W,n(o,{id:"sb-vertical",modelValue:e.value,"onUpdate:modelValue":t[2]||(t[2]=l=>e.value=l),vertical:""},null,8,["modelValue"])]),_:1})]),_:1}),M,n(u,null,{default:s(()=>[n(i,null,{default:s(()=>[n(o,{id:"sb-days",modelValue:r.value,"onUpdate:modelValue":t[3]||(t[3]=l=>r.value=l),"formatter-fn":S(g),min:"0",max:"6",wrap:""},null,8,["modelValue","formatter-fn"]),a("p",null,"Value: "+v(r.value),1)]),_:1})]),_:1}),G,n(u,null,{default:s(()=>[n(i,null,{default:s(()=>[n(_,null,{default:s(()=>[n(b,{md:"6",class:"mb-2"},{default:s(()=>[H,n(o,{id:"sb-disabled",modelValue:e.value,"onUpdate:modelValue":t[4]||(t[4]=l=>e.value=l),disabled:""},null,8,["modelValue"])]),_:1}),n(b,{md:"6",class:"mb-2"},{default:s(()=>[J,n(o,{id:"sb-readonly",modelValue:e.value,"onUpdate:modelValue":t[5]||(t[5]=l=>e.value=l),readonly:""},null,8,["modelValue"])]),_:1})]),_:1})]),_:1})]),_:1}),n(u,null,{default:s(()=>[n(y)]),_:1})])}}});var X=V(K,[["__file","SpinButton.html.vue"]]);export{X as default};
